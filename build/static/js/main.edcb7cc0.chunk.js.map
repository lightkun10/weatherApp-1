{"version":3,"sources":["sunset.png","App.js","index.js"],"names":["App","useState","unitMeasurement","setUnitMeasurement","weatherType","setWeatherType","cityName","setCityName","countryName","setCountryName","temp","setTemp","feelsLike","setFeelsLike","wind","setWind","humidity","setHumidity","degreeUnit","setDegreeUnit","windSpeedUnit","setWindSpeedUnit","city","unit","a","fetch","weatherResponse","json","result","sys","country","countryCode","weather","main","name","parseInt","feels_like","speed","console","log","unitButtonClick","e","target","id","document","querySelector","classList","add","remove","useEffect","assessInput","key","value","HeaderTitle","className","src","logo","width","height","SearchBar","type","placeholder","onKeyDown","onClick","UnitButtons","Contents","Footer","href","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edcb7cc0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sunset.8b57c5b9.png\";","import { React, useEffect, useState } from \"react\";\nimport logo from \"./sunset.png\";\nimport \"./App.css\";\n\nfunction App() {\n  const [unitMeasurement, setUnitMeasurement] = useState(\"metric\");\n  const [weatherType, setWeatherType] = useState();\n  const [cityName, setCityName] = useState(\"Singapore\");\n  const [countryName, setCountryName] = useState();\n  const [temp, setTemp] = useState();\n  const [feelsLike, setFeelsLike] = useState();\n  const [wind, setWind] = useState();\n  const [humidity, setHumidity] = useState();\n  const [degreeUnit, setDegreeUnit] = useState(\"°C\");\n  const [windSpeedUnit, setWindSpeedUnit] = useState(\"M/S\");\n\n  async function weather(city, unit) {\n    try {\n      const weatherResponse = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&appid=e8e6c5c2e112a84464443a02dd4f187b`\n      );\n\n      const result = await weatherResponse.json();\n      const countryCode = await result.sys.country;\n      // const countryResponse = await fetch(\n      //   `https://restcountries.eu/rest/v2/alpha?codes=${countryCode}`\n      // );\n      // const countryResult = await countryResponse.json();\n      setCountryName(countryCode);\n      setWeatherType(result.weather[0].main);\n      setCityName(result.name);\n      setTemp(parseInt(result.main.temp));\n      setFeelsLike(parseInt(result.main.feels_like));\n      setWind(parseInt(result.wind.speed));\n      setHumidity(result.main.humidity);\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n  }\n\n  const unitButtonClick = (e) => {\n    if (e.target.id === \"metric\") {\n      document.querySelector(\"#metric\").classList.add(\"positive\");\n      document.querySelector(\"#imperial\").classList.remove(\"positive\");\n      setDegreeUnit(\"°C\");\n      setWindSpeedUnit(\"M/S\");\n      setUnitMeasurement(\"metric\");\n    } else {\n      document.querySelector(\"#metric\").classList.remove(\"positive\");\n      document.querySelector(\"#imperial\").classList.add(\"positive\");\n      setDegreeUnit(\"°F\");\n      setWindSpeedUnit(\"MPH\");\n      setUnitMeasurement(\"imperial\");\n    }\n  };\n\n  useEffect(() => {\n    weather(cityName, unitMeasurement);\n    if (unitMeasurement === \"metric\") {\n      document.querySelector(\"#metric\").classList.add(\"positive\");\n    } else {\n      document.querySelector(\"#imperial\").classList.add(\"positive\");\n    }\n  });\n\n  const assessInput = (e) => {\n    const city = document.querySelector(\"#cityInput\");\n\n    if (\n      (e.key === \"Enter\" || e.target.id === \"searchButton\") &&\n      city.value !== \"\"\n    ) {\n      setCityName(city.value);\n    }\n  };\n\n  const HeaderTitle = () => {\n    return (\n      <>\n        <h1 className=\"ui center aligned icon header\">\n          <i>\n            <img src={logo} width=\"100\" height=\"100\"></img>\n          </i>\n          <div className=\"content\">Weather App</div>\n        </h1>\n      </>\n    );\n  };\n\n  const SearchBar = () => {\n    return (\n      <div className=\"ui centered grid\">\n        <div className=\"ui action input\">\n          <input\n            id=\"cityInput\"\n            type=\"text\"\n            placeholder=\"Input City Name\"\n            onKeyDown={(e) => assessInput(e)}\n          ></input>\n          <button\n            className=\"ui icon button\"\n            id=\"searchButton\"\n            onClick={(e) => assessInput(e)}\n          >\n            <i\n              className=\"search icon\"\n              id=\"searchButton\"\n              onClick={(e) => assessInput(e)}\n            ></i>\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const UnitButtons = () => {\n    return (\n      <div className=\"ui centered grid\">\n        <div className=\"row\">\n          <div className=\"ui buttons\">\n            <button\n              id=\"metric\"\n              className=\"ui button\"\n              onClick={(e) => {\n                unitButtonClick(e);\n              }}\n            >\n              Metric\n            </button>\n            <div className=\"or\"></div>\n            <button\n              id=\"imperial\"\n              className=\"ui button\"\n              onClick={(e) => {\n                unitButtonClick(e);\n              }}\n            >\n              Imperial\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const Contents = () => {\n    return (\n      <div className=\"ui grid centered stackable container\">\n        {/* <div className=\"four wide column\"></div> */}\n        <div className=\"eight wide column\" id=\"contentBox\">\n          <div className=\"row\">\n            <p id=\"locationLabel\">\n              {cityName}, {countryName}\n            </p>\n          </div>\n          <div className=\"row\">\n            <div>\n              <p id=\"weatherTypeLabel\">{weatherType}</p>\n            </div>\n          </div>\n\n          <div className=\"ui grid row\" id=\"infoBox\">\n            <div className=\"four wide column right aligned\" id=\"bigTempBox\">\n              <p id=\"bigTemp\">{temp}</p>\n            </div>\n            <div className=\"one wide column left aligned\" id=\"degreeUnit\">\n              {degreeUnit}\n            </div>\n            <div className=\"nine wide column left aligned\" id=\"otherInfoBox\">\n              <div>\n                Feels Like: {feelsLike} {degreeUnit}\n              </div>\n              <div>\n                Wind Speed: {wind} {windSpeedUnit}\n              </div>\n              <div>humidity: {humidity}%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const Footer = () => {\n    return (\n      <div className=\"ui grid centered\" id=\"footer\">\n        Icons made by{\" \"}\n        <a href=\"http://www.freepik.com/\" title=\"Freepik\">\n          Freepik\n        </a>{\" \"}\n        from{\" \"}\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n          www.flaticon.com\n        </a>\n      </div>\n    );\n  };\n  return (\n    <>\n      <HeaderTitle />\n      <SearchBar />\n      <UnitButtons />\n      <Contents />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}